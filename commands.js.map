{"version":3,"file":"commands.js","mappings":"YAsBA,SAASA,IACPC,OAAOC,QAAQC,SAASC,qBAAqBH,OAAOI,aAAaC,YAAY,SAACC,GACxEA,EAAYC,SAAWP,OAAOQ,kBAAkBC,OAClDC,WAAW,UAAYJ,EAAYK,MAAMC,SAEzCF,WAAW,iCAAmCG,KAAKC,UAAUR,EAAYS,OAE7E,GACF,CAvBAf,OAAOgB,SAAQ,WACTC,KAAKC,OAASlB,OAAOmB,SAASC,aAChClB,SAASmB,eAAe,gBAAgBC,MAAMC,QAAU,OACxDrB,SAASmB,eAAe,YAAYC,MAAMC,QAAU,OACpDrB,SAASmB,eAAe,gBAAgBG,QAAU,kBAAMC,aAAaC,YAAY,EACjFxB,SAASmB,eAAe,eAAeG,QAAU,kBAAMC,aAAaE,WAAW,EAC/EzB,SAASmB,eAAe,sBAAsBG,QAAU,kBAAMC,aAAa1B,EAAiB,EAC5FG,SAASmB,eAAe,cAAcG,QAAU,kBAAMI,SAASC,UAAU,EACzE3B,SAASmB,eAAe,qBAAqBG,QAAU,kBAAMC,aAAaK,eAAe,EACzF5B,SAASmB,eAAe,oBAAoBG,QAAU,kBAAMC,aAAaM,cAAc,EACvF7B,SAASmB,eAAe,wBAAwBG,QAAU,kBAAMC,aAAaO,kBAAkB,EAC/F9B,SAASmB,eAAe,oBAAoBG,QAAU,kBAAMC,aAAaQ,cAAc,EAE3F,IAgCAjC,OAAOkC,QAAQC,UAAU,UAhBzB,SAAgBC,GACd,IAAMxB,EAAU,CACdyB,KAAMrC,OAAOsC,aAAaC,4BAA4BC,qBACtD5B,QAAS,oBACT6B,KAAM,aACNC,YAAY,GAId1C,OAAOC,QAAQ0C,QAAQC,KAAKC,qBAAqBC,aAAa,SAAUlC,GAGxEwB,EAAMW,WACR,G","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nOffice.onReady(() => {\n  if (info.host === Office.HostType.PowerPoint) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"insert-image\").onclick = () => clearMessage(insertImage);\n    document.getElementById(\"insert-text\").onclick = () => clearMessage(insertText);\n    document.getElementById(\"get-slide-metadata\").onclick = () => clearMessage(getSlideMetadata);\n    document.getElementById(\"add-slides\").onclick = () => tryCatch(addSlides);\n    document.getElementById(\"go-to-first-slide\").onclick = () => clearMessage(goToFirstSlide);\n    document.getElementById(\"go-to-next-slide\").onclick = () => clearMessage(goToNextSlide);\n    document.getElementById(\"go-to-previous-slide\").onclick = () => clearMessage(goToPreviousSlide);\n    document.getElementById(\"go-to-last-slide\").onclick = () => clearMessage(goToLastSlide);\n  }\n});\n\nfunction getSlideMetadata() {\n  Office.context.document.getSelectedDataAsync(Office.CoercionType.SlideRange, (asyncResult) => {\n    if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n      setMessage(\"Error: \" + asyncResult.error.message);\n    } else {\n      setMessage(\"Metadata for selected slides: \" + JSON.stringify(asyncResult.value));\n    }\n  });\n}\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event {Office.AddinCommands.Event}\n */\nfunction action(event) {\n  const message = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message.\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete.\n  event.completed();\n}\n\n// Register the function with Office.\nOffice.actions.associate(\"action\", action);\n"],"names":["getSlideMetadata","Office","context","document","getSelectedDataAsync","CoercionType","SlideRange","asyncResult","status","AsyncResultStatus","Failed","setMessage","error","message","JSON","stringify","value","onReady","info","host","HostType","PowerPoint","getElementById","style","display","onclick","clearMessage","insertImage","insertText","tryCatch","addSlides","goToFirstSlide","goToNextSlide","goToPreviousSlide","goToLastSlide","actions","associate","event","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","mailbox","item","notificationMessages","replaceAsync","completed"],"sourceRoot":""}